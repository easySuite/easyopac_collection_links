<?php

/**
 * @file
 */

/**
 * Implements hook_menu().
 */
function easyopac_collection_links_menu() {
  $items = [];

  $items['admin/config/collection-links'] = [
    'title' => 'Collection Previews: LMS',
    'description' => 'Configure LMS service for requesting external resources.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['easyopac_collection_links_settings_form'],
    'access arguments' => ['administer site configuration'],
    'file' => 'easyopac_collection_links.admin.inc',
  ];

  $items['previews'] = [
    'title' => 'Get previews for ting objects',
    'page callback' => 'easyopac_collection_links_ajax_callback',
    'page arguments' => [1],
    'access arguments' => ['access content'],
    'type' => MENU_CALLBACK,
  ];

  return $items;
}

/**
 * Custom AJAX menu item callback.
 */
function easyopac_collection_links_ajax_callback() {
  $result = [];

  if (!empty($_POST['previewedIds']) && is_array($_POST['previewedIds'])) {
    $ids = $_POST['previewedIds'];
    $result = easyopac_collection_links_make_request($ids);
  }

  drupal_json_output($result);
  drupal_exit();
}

/**
 * Perform request to LMS.
 *
 * @param array $ids
 *
 * @return array|void
 */
function easyopac_collection_links_make_request(array $ids) {
  $lms_service_url = variable_get('easyopac_collection_links_lms_service_url', NULL);

  if (empty($lms_service_url)) {
    return;
  }

  $items = [];
  foreach ($ids as $item) {
    $options = [
      'faustNumber' => $item,
      'withExternalResources' => NULL,
      'withNoCover' => NULL,
    ];
    $url = url($lms_service_url . '/detail', ['query' => $options]);

    $response = drupal_http_request($url);
    if ($response->code == '200') {
      $data = drupal_json_decode($response->data);
      if (!empty($data['externalResources'])) {
        $items[$item] = [
          'data' => easyopac_collection_links_generate_preview_url($data['externalResources'], $data['type']),
        ];
      }
    }
  }

  return $items;
}

/**
 * Implements hook_ding_entity_buttons().
 */
function easyopac_collection_links_ding_entity_buttons($type, $entity) {
  $buttons = [];

  if ($entity instanceof TingCollection) {
    $ids = [];
    foreach ($entity->getTingObjectCollection()->getObjects() as $item) {
      $ids[] = $item->getId();
    }

    $result = easyopac_collection_links_make_request($ids);
    $filtered_result = array_filter($result, function ($i) {
      return !empty($i['data']['url']);
    });

    $keys = array_keys($filtered_result);
    if ($keys) {
      $entity->id = $keys[0];
    }
  }

  $buttons[] = [
    '#type' => 'link',
    '#href' => '',
    '#title' => t('Preview snippet'),
    '#attributes' => [
      'class' => [
        'action-button',
        'button-preview',
        'previewable-pending',
      ],
      'target' => '_blank',
      'data-preview-id' => $entity->id,
    ],
    '#attached' => [
      'js' => [
        [
          'type' => 'file',
          'data' => drupal_get_path('module', 'easyopac_collection_links') . '/js/easyopac_collection_links.js',
        ],
      ],
    ],
    '#weight' => 100,
  ];

  return $buttons;
}

/**
 * Generate preview link.
 *
 * @param array $preview
 *   External resources array from LMS request.
 * @param string $type
 *   Requested item material type.
 *
 * @return mixed
 */
function easyopac_collection_links_generate_preview_url(array $preview, $type) {
  $mtype = '';
  $preview_url = NULL;
  $types = [
    'ebook' => [
      'Bog',
      'Ebog',
    ],
    'audiobook' => [
      'Lydbog',
      'Lydbog (bÃ¥nd)',
      'Lydbog (cd)',
      'Lydbog (net)',
      'Lydbog (cd-mp3)',
    ],
    'videos' => [
      'Cd (musik)',
      'Film (net)',
      'Dvd',
    ],
  ];

  foreach ($types as $k => $mt) {
    if (in_array($type, $mt)) {
      $mtype = $k;
    }
  }

  switch ($mtype) {
    case $mtype == 'videos':
      $preview_data['url'] = $preview['videos'][0]['url'];
      break;

    default:
      $preview_data['url'] = $preview[$mtype];
      break;
  }

  // Let's try to find replacement in case the link is empty.
  if (!$preview_data['url'] && count($preview) > 1) {
    // Get rid of reviews data.
    unset($preview['reviews']);

    // Get closest item.s
    $preview_data['url'] = reset($preview);
    $mtype = array_key_first($preview);
  }

  $preview_data['type'] = $mtype;

  return $preview_data;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function easyopac_collection_links_preprocess_ting_object(&$variables) {
  $multiple = (count($variables['elements']['#object']->ting_entities['und']) > 1);
  $view_mode = NULL;
  if (isset($variables["content"]["ting_primary_object"][0]["#view_mode"])) {
    $view_mode = $variables["content"]["ting_primary_object"][0]["#view_mode"];
  }

  if (isset($variables["elements"]["#view_mode"])) {
    $view_mode = $variables["elements"]["#view_mode"];
  }

  if (!empty($view_mode) && ($view_mode == 'search_result' || $view_mode != 'full') && $multiple) {
    $collection_button = easyopac_collection_links_ding_entity_buttons('collection', $variables['elements']['#object']);
    if (module_exists('ding_collection_reservation')) {
      $variables["elements"]["ting_primary_object"][0]["ding_entity_buttons"]['#markup'] .= drupal_render($collection_button);
    }
    else {
      $collection_button += [
        '#weight' => 191,
        '#prefix' => '<div class="collections-preview--collection-wrapper">',
        '#suffix' => '</div>',
      ];

      $variables['content']['ting_primary_object'][0]['previews_button'] = $collection_button;
    }
  }
}
