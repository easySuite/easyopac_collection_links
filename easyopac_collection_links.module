<?php

/**
 * @file
 */

/**
 * Implements hook_menu().
 */
function easyopac_collection_links_menu() {
  $items = [];

  $items['admin/config/collection-links'] = [
    'title' => 'Collection Previews: LMS',
    'description' => 'Configure LMS service for requesting external resources.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['easyopac_collection_links_settings_form'],
    'access arguments' => ['administer site configuration'],
    'file' => 'easyopac_collection_links.admin.inc',
  ];

  $items['previews'] = [
    'title' => 'Get previews for ting objects',
    'page callback' => 'easyopac_collection_links_ajax_callback',
    'access arguments' => ['access content'],
    'type' => MENU_CALLBACK,
  ];

  $items['ecl-proxy'] = [
    'title' => 'Proxy request to Ereolen',
    'page callback' => 'easyopac_collection_links_proxy',
    'access arguments' => ['access content'],
    'type' => MENU_CALLBACK,
  ];

  return $items;
}

/**
 * Proxying requests to eReolen.
 */
function easyopac_collection_links_proxy() {
  $qp = drupal_get_query_parameters();

  if (isset($qp['url'])) {
    drupal_add_http_header('Access-Control-Allow-Origin', '*');

    echo file_get_contents($qp['url']);
  }
}

/**
 * Implements hook_page_alter().
 */
function easyopac_collection_links_page_alter(&$vars) {
  $args = arg();

  if ($args[0] == 'search' && $args[1] == 'ting' || $args[0] == 'ting' && ($args[1] == 'object' || $args[1] == 'collection')) {
    drupal_add_js(
      [
        'easyopac_collection_links' => [
          'page_type' => $args[1],
        ],
      ], 'setting');
    drupal_add_js(drupal_get_path('module', 'easyopac_collection_links') . '/js/easyopac_collection_links.js', [
      'type' => 'file',
      'scope' => 'footer',
      'defer' => TRUE,
    ]);
  }
}

/**
 * Custom AJAX menu item callback.
 */
function easyopac_collection_links_ajax_callback() {
  $result = [];
  if (!empty($_POST['previewedIds']) && is_array($_POST['previewedIds'])) {
    $ids = $_POST['previewedIds'];
    $page_type = $_POST['pageType'];
    $result = easyopac_collection_links_make_request($ids, $page_type);
  }

  drupal_json_output($result);
  drupal_exit();
}

/**
 * Perform request to LMS.
 *
 * @param array $ids
 * @param string $type
 *
 * @return array|void
 */
function easyopac_collection_links_make_request(array $ids, $type) {
  $items = [];
  $lms_service_url = variable_get('easyopac_collection_links_lms_service_url', NULL);

  if (empty($lms_service_url)) {
    return;
  }

  if (empty($ids)) {
    return;
  }

  if ($type == 'collection' || $type == 'object') {
    $action = '/detail';

    if ($type == 'object') {
      $ids[] = array_shift($ids);
    }

    $id = $ids[0];

    if (!preg_match('/^\d+-\w+:[[:alnum:]]+/', rawurldecode($id))) {
      return;
    }

    $options = [
      'faustNumber' => $id,
      'withExternalResources' => NULL,
      'withNoCover' => NULL,
    ];
  }
  else {
    $action = '/search';
    $ids = implode(',', $ids);

    $options = [
      'include' => $ids,
      'withMeta' => NULL,
    ];
  }
  $url = url($lms_service_url . $action, ['query' => $options]);

  $response = drupal_http_request($url);
  if ($response->code == '200') {
    $data = drupal_json_decode($response->data);

    if ($type == 'ting') {
      $data = $data['objects'];
      foreach ($data as $datum) {
        if (!empty($datum['externalResources'])) {
          $items[$datum['id']] = easyopac_collection_links_generate_preview_url($datum['externalResources']);
        }
      }
    }
    else {
      if (!empty($data['externalResources'])) {
        foreach ($ids as $id) {
          $items[$id] = easyopac_collection_links_generate_preview_url($data['externalResources']);
        }
      }
    }
  }

  return $items;
}

/**
 * Implements hook_ding_entity_buttons().
 */
function easyopac_collection_links_ding_entity_buttons($type, $entity) {
  $buttons = [];

  $buttons[] = [
    '#type' => 'link',
    '#href' => '',
    '#title' => t('Preview'),
    '#attributes' => [
      'class' => [
        'action-button',
        'button-preview',
        'previewable-pending',
      ],
      'target' => '_blank',
      'data-preview-id' => $entity->id,
      'data-preview-type' => $type,
    ],
    '#weight' => 100,
  ];

  return $buttons;
}

/**
 * Generate preview link.
 *
 * @param array $preview
 *   External resources array from LMS request.
 *
 * @return mixed
 */
function easyopac_collection_links_generate_preview_url(array $preview) {
  if (isset($preview['reviews'])) {
    unset($preview['reviews']);
  }

  if (isset($preview['videos'])) {
    unset($preview['videos']);
  }

  return $preview;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function easyopac_collection_links_preprocess_ting_object(&$variables) {
  $multiple = (count($variables['elements']['#object']->ting_entities['und']) > 1);
  $view_mode = NULL;
  if (isset($variables["content"]["ting_primary_object"][0]["#view_mode"])) {
    $view_mode = $variables["content"]["ting_primary_object"][0]["#view_mode"];
  }

  if (isset($variables["elements"]["#view_mode"])) {
    $view_mode = $variables["elements"]["#view_mode"];
  }

  if (!empty($view_mode) && ($view_mode == 'search_result' || $view_mode != 'full') && $multiple) {
    $collection_button = easyopac_collection_links_ding_entity_buttons('collection', $variables['elements']['#object']);
    if (module_exists('ding_collection_reservation')) {
      $variables["elements"]["ting_primary_object"][0]["ding_entity_buttons"]['#markup'] .= drupal_render($collection_button);
    }
    else {
      $collection_button += [
        '#weight' => 191,
        '#prefix' => '<div class="collections-preview--collection-wrapper">',
        '#suffix' => '</div>',
      ];

      $variables['content']['ting_primary_object'][0]['previews_button'] = $collection_button;
    }
  }
  else if (!$multiple && ($view_mode == 'full' || $view_mode == 'collection_list')) {
    $entity_buttons = $variables['elements']['ding_entity_buttons'][0];

    foreach ($entity_buttons as $key => $entity_button) {
      if ($entity_button['#title'] == 'Preview') {
        unset($variables['elements']['ding_entity_buttons'][0][$key]);
      }
    }

    $button_types = ['audiobook', 'ebook'];

    foreach ($button_types as $button_type) {
      $button = easyopac_collection_links_ding_entity_buttons($button_type, $variables['elements']['#object']);
      $variables['elements']['ding_entity_buttons'][0][] = reset($button);
    }
  }
  else if ($view_mode == 'teaser') {
    $button_types = ['audiobook', 'ebook'];

    foreach ($button_types as $button_type) {
      $button = easyopac_collection_links_ding_entity_buttons($button_type, $variables['elements']['#object']);
      $variables["elements"]["ting_primary_object"][0]["ding_entity_buttons"][0][] = reset($button);
    }
  }
}
